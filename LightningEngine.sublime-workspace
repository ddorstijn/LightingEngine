{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"GetCom",
				"GetComponent<T>()\tT"
			],
			[
				"Re",
				"RecalculateNormals()\tvoid"
			],
			[
				"json",
				"json_file\tstatement"
			],
			[
				"data",
				"data_x"
			],
			[
				"output",
				"output_num_units\tstatement"
			],
			[
				"da",
				"data_y"
			],
			[
				"train",
				"train_data\tstatement"
			],
			[
				"bat",
				"batch_x\tstatement"
			],
			[
				"b",
				"batch_size\tstatement"
			],
			[
				"batch",
				"batch_y\tstatement"
			],
			[
				"ba",
				"batch_size\tparam"
			],
			[
				"load",
				"load_data"
			],
			[
				"acti",
				"activity"
			],
			[
				"x",
				"xscale〔function〕"
			],
			[
				"for",
				"for\tFor Loop"
			],
			[
				"mai",
				"main\tmain()"
			],
			[
				"cou",
				"cout\tstd::ostream cout"
			],
			[
				"fo",
				"for_\tFor Loop"
			],
			[
				"inc",
				"inc\t#include <…>"
			],
			[
				"vec",
				"value_comp\tfunc"
			],
			[
				"QtWidgt",
				"QtWidget\timport"
			],
			[
				"QtWidgets",
				"QtWidgets\tmodule"
			],
			[
				"QtW",
				"QtWidgets\tmodule"
			],
			[
				"QA",
				"QAction\tclass"
			],
			[
				"setS",
				"setShortcut\tfunction"
			],
			[
				"saveAc",
				"saveAction\tstatement"
			],
			[
				"menu",
				"menuBar\tfunction"
			],
			[
				"ex",
				"exit\tfunction"
			],
			[
				"Tick",
				"TicksBelow\tinstance"
			],
			[
				"setT",
				"setTickInterval\tfunction"
			],
			[
				"setVal",
				"setValue\tfunction"
			],
			[
				"setM",
				"setMinimum\tfunction"
			],
			[
				"QL",
				"QLabel\tclass"
			],
			[
				"cl",
				"clicked"
			],
			[
				"QAP",
				"QApplication\tclass"
			],
			[
				"Q",
				"QtWidgets"
			],
			[
				"__",
				"__init__"
			],
			[
				"QT",
				"PyQt5〔module〕"
			],
			[
				"crete",
				"createLine\t(shapes.js)"
			],
			[
				"img",
				"img\tTag"
			],
			[
				"und",
				"underscores"
			],
			[
				"quest",
				"question-heading"
			],
			[
				"card",
				"card-header"
			],
			[
				"question",
				"question-heading\t(index.html)"
			],
			[
				"questi",
				"question-heading\t(index.html)"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"add",
				"addQuestion"
			],
			[
				"arra",
				"array_push〔function〕"
			],
			[
				"newAnsw",
				"newAnswerInput"
			],
			[
				"newType",
				"newTypeSelect"
			],
			[
				"newHint",
				"newHintInput"
			],
			[
				"newQ",
				"newQuestionInput"
			],
			[
				"clas",
				"class\tAttr"
			],
			[
				"col-m",
				"col-md-8"
			],
			[
				"col",
				"col-md-4"
			],
			[
				"re",
				"removeClass〔function〕"
			],
			[
				"alert",
				"alert-success\t(index.html)"
			],
			[
				"my",
				"mysqli_query\t(encode.php)"
			],
			[
				"form",
				"formdata"
			],
			[
				"encode",
				"encode.php"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"col-",
				"col-md-8"
			],
			[
				"ans",
				"answerMode"
			],
			[
				"text",
				"textarea\t<textarea>"
			],
			[
				"check",
				"checkbox"
			],
			[
				"return",
				"$return〔variable〕"
			],
			[
				"new",
				"newQuestion"
			],
			[
				"auto",
				"autofocus\tAttr"
			],
			[
				"en",
				"endNode"
			],
			[
				"get",
				"getPosition"
			],
			[
				"start",
				"startNode"
			],
			[
				"fu",
				"function"
			],
			[
				"source",
				"sourcePassive\t(shapes.js)"
			],
			[
				"so",
				"sourcePassive"
			],
			[
				"dr",
				"draggable\t(init.js)"
			],
			[
				"ce",
				"centery"
			],
			[
				"move",
				"move_vector"
			],
			[
				"mo",
				"move_vector"
			],
			[
				"ta",
				"target"
			],
			[
				"tar",
				"target_vector"
			],
			[
				"d",
				"direction_current〔variable〕"
			],
			[
				"dir",
				"dir_eased"
			],
			[
				"C",
				"CAM_POSX〔variable〕"
			],
			[
				"CAM",
				"CAM_POSX\t(constants.py)"
			],
			[
				"stop",
				"stop_vertical\t(camera.py)"
			],
			[
				"cam",
				"cameraControls"
			],
			[
				"camera",
				"cameraControls\t(camera.py)"
			],
			[
				"shi",
				"shift_world\t(levels.py)"
			],
			[
				"shif",
				"shift_y"
			],
			[
				"shift",
				"shift_x"
			],
			[
				"wo",
				"world_shifty〔variable〕"
			],
			[
				"game",
				"game_world"
			],
			[
				"direction",
				"direction_target"
			],
			[
				"dire",
				"direction_current〔variable〕"
			],
			[
				"directoin",
				"direction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/PhongLightning.shader",
			"settings":
			{
				"buffer_size": 5845,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Familie Dorstijn/AppData/Local/Temp/Temp1_builtin_shaders-2017.3.1f1.zip/DefaultResourcesExtra/Standard.shader",
			"settings":
			{
				"buffer_size": 11946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/MCBlob.cs",
			"settings":
			{
				"buffer_size": 40997,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Editor/MCBlobEditor.cs",
			"settings":
			{
				"buffer_size": 390,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#pragma kernel Calculate\n\n// Define fallof function to be used. Options: GENERIC_METABALL_FUNCTION, ELECTRIC_POTENTIAL_FUNCTION\n#define GENERIC_METABALL_FUNCTION\n\n//\n// structs and buffers associated with them\n//\n\nstruct Values {\n\tfloat edge0Val, edge1Val, edge2Val, edge3Val, edge4Val, edge5Val, edge6Val, edge7Val;\n};\n\nstruct Positions {\n\tfloat3 centerPos;\n\tfloat3 edge0Pos, edge1Pos, edge2Pos, edge3Pos, edge4Pos, edge5Pos, edge6Pos, edge7Pos;\n};\n\nstruct Vertices {\n\tint index;\n\tfloat3 edge0, edge1, edge2, edge3, edge4, edge5, edge6, edge7, edge8, edge9, edge10, edge11;\n};\n\nstruct Ball {\n\tfloat factor;\n\tfloat3 position;\n};\n\nStructuredBuffer<Positions> positions;\nStructuredBuffer<Ball> metaballs;\nStructuredBuffer<float3> edgeMap;\n\nRWStructuredBuffer<Vertices> edgeVertices;\n\n//\n// misc variables\n//\n\nint width;\nint height;\nint numMetaballs;\n\nfloat threshold;\n\n//\n// lookup tables\n//\n\nstatic uint edgeTable[256] = {\n\t0x0  , 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\n\t0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\n\t0x190, 0x99 , 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\n\t0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\n\t0x230, 0x339, 0x33 , 0x13a, 0x636, 0x73f, 0x435, 0x53c,\n\t0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\n\t0x3a0, 0x2a9, 0x1a3, 0xaa , 0x7a6, 0x6af, 0x5a5, 0x4ac,\n\t0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\n\t0x460, 0x569, 0x663, 0x76a, 0x66 , 0x16f, 0x265, 0x36c,\n\t0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\n\t0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff , 0x3f5, 0x2fc,\n\t0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\n\t0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55 , 0x15c,\n\t0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\n\t0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc ,\n\t0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\n\t0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\n\t0xcc , 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\n\t0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\n\t0x15c, 0x55 , 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\n\t0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\n\t0x2fc, 0x3f5, 0xff , 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\n\t0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\n\t0x36c, 0x265, 0x16f, 0x66 , 0x76a, 0x663, 0x569, 0x460,\n\t0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\n\t0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa , 0x1a3, 0x2a9, 0x3a0,\n\t0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\n\t0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33 , 0x339, 0x230,\n\t0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\n\t0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99 , 0x190,\n\t0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\n\t0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\n};\n\nstatic int verticesAtEndsOfEdges[24] = {\n\t0,  1,\n\t1,  2,\n\t2,  3,\n\t3,  0,\n\t4,  5,\n\t5,  6,\n\t6,  7,\n\t7,  4,\n\t0,  4,\n\t1,  5,\n\t2,  6,\n\t3,  7\n};\n\n//\n// helper functions\n//\n\nint findIndex(Values edgeValue) {\n\tint cubeIndex = 0;\n\n\tif (edgeValue.edge0Val > threshold) {\n\t\tcubeIndex += 1;\n\t}\n\tif (edgeValue.edge1Val > threshold) {\n\t\tcubeIndex += 2;\n\t}\n\tif (edgeValue.edge2Val > threshold) {\n\t\tcubeIndex += 4;\n\t}\n\tif (edgeValue.edge3Val > threshold) {\n\t\tcubeIndex += 8;\n\t}\n\tif (edgeValue.edge4Val > threshold) {\n\t\tcubeIndex += 16;\n\t}\n\tif (edgeValue.edge5Val > threshold) {\n\t\tcubeIndex += 32;\n\t}\n\tif (edgeValue.edge6Val > threshold) {\n\t\tcubeIndex += 64;\n\t}\n\tif (edgeValue.edge7Val > threshold) {\n\t\tcubeIndex += 128;\n\t}\n\n\treturn cubeIndex;\n}\n\nfloat getValueAtEdge(Values val, int i) {\n\tif (i == 0) {\n\t\treturn val.edge0Val;\n\t}\n\telse if (i == 1) {\n\t\treturn val.edge1Val;\n\t}\n\telse if (i == 2) {\n\t\treturn val.edge2Val;\n\t}\n\telse if (i == 3) {\n\t\treturn val.edge3Val;\n\t}\n\telse if (i == 4) {\n\t\treturn val.edge4Val;\n\t}\n\telse if (i == 5) {\n\t\treturn val.edge5Val;\n\t}\n\telse if (i == 6) {\n\t\treturn val.edge6Val;\n\t}\n\telse {\n\t\treturn val.edge7Val;\n\t}\n}\n\nValues zeroValuesStruct() {\n\tValues val;\n\tval.edge0Val = 0;\n\tval.edge1Val = 0;\n\tval.edge2Val = 0;\n\tval.edge3Val = 0;\n\tval.edge4Val = 0;\n\tval.edge5Val = 0;\n\tval.edge6Val = 0;\n\tval.edge7Val = 0;\n\n\treturn val;\n}\n\n//\n// field function evaluation\n//\n\nfloat metaballFalloffFunction(float factor, float3 dist) {\n#ifdef GENERIC_METABALL_FUNCTION\n\treturn factor / (dist.x * dist.x + dist.y * dist.y + dist.z * dist.z);\n#endif\n#ifdef ELECTRIC_POTENTIAL_FUNCTION\n\treturn 8.987551788e9 * factor / sqrt(dist.x * dist.x + dist.y * dist.y + dist.z * dist.z);\n#endif\n}\n\nValues evaluateFieldFunction(int pos) {\n\tValues edgeValues = zeroValuesStruct();\n\n\tfor (int i = 0; i < numMetaballs; i++) {\n\t\tfloat3 dist = positions[pos].edge0Pos - metaballs[i].position;\n\t\tedgeValues.edge0Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge1Pos - metaballs[i].position;\n\t\tedgeValues.edge1Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge2Pos - metaballs[i].position;\n\t\tedgeValues.edge2Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge3Pos - metaballs[i].position;\n\t\tedgeValues.edge3Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge4Pos - metaballs[i].position;\n\t\tedgeValues.edge4Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge5Pos - metaballs[i].position;\n\t\tedgeValues.edge5Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge6Pos - metaballs[i].position;\n\t\tedgeValues.edge6Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\n\t\tdist = positions[pos].edge7Pos - metaballs[i].position;\n\t\tedgeValues.edge7Val += metaballFalloffFunction(metaballs[i].factor, dist);\n\t}\n\n\treturn edgeValues;\n}\n\n//\n// computer shader kernel\n//\n\n[numthreads(8,8,8)]\nvoid Calculate(uint3 id : SV_DispatchThreadID) {\n\tint pos = id.x + width * (id.y + height * id.z);\n\n\t// find scalar values of a field on this position\n\tValues edgeValues = evaluateFieldFunction(pos);\n\n\t// partial marching cubes algorithm\n\n\tint cubeIndex = findIndex(edgeValues);\n\tint pattern = edgeTable[cubeIndex];\n\n\tfloat3 verticesArr[12] = {\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0),\n\t\tfloat3(0, 0, 0)\n\t};\n\n\tfor (int edge = 0; edge < 12; edge++) {\n\t\tif ((pattern & 1 << edge) != 0) {\n\t\t\tint vertIndex0 = verticesAtEndsOfEdges[(int)(edge * 2)];\n\t\t\tint vertIndex1 = verticesAtEndsOfEdges[(int)(edge * 2 + 1)];\n\n\t\t\tfloat vertValue0 = getValueAtEdge(edgeValues, vertIndex0);\n\t\t\tfloat vertValue1 = getValueAtEdge(edgeValues, vertIndex1);\n\n\t\t\tfloat3 vertPosition0 = positions[pos].centerPos + edgeMap[vertIndex0];\n\t\t\tfloat3 vertPosition1 = positions[pos].centerPos + edgeMap[vertIndex1];\n\n\t\t\tfloat delta = (threshold - vertValue0) / (vertValue1 - vertValue0);\n\n\t\t\t// lineary interpolate positions for smooth surface\n\t\t\tverticesArr[edge] = vertPosition0 + delta * (vertPosition1 - vertPosition0);\n\t\t}\n\t}\n\n\t// save processed data to edgeVertices buffer\n\tedgeVertices[pos].index = cubeIndex;\n\tedgeVertices[pos].edge0 = verticesArr[0];\n\tedgeVertices[pos].edge1 = verticesArr[1];\n\tedgeVertices[pos].edge2 = verticesArr[2];\n\tedgeVertices[pos].edge3 = verticesArr[3];\n\tedgeVertices[pos].edge4 = verticesArr[4];\n\tedgeVertices[pos].edge5 = verticesArr[5];\n\tedgeVertices[pos].edge6 = verticesArr[6];\n\tedgeVertices[pos].edge7 = verticesArr[7];\n\tedgeVertices[pos].edge8 = verticesArr[8];\n\tedgeVertices[pos].edge9 = verticesArr[9];\n\tedgeVertices[pos].edge10 = verticesArr[10];\n\tedgeVertices[pos].edge11 = verticesArr[11];\n}\n",
			"file": "Assets/MarchingCubesComputeShader.compute",
			"file_size": 7603,
			"file_write_time": 131655370939745515,
			"settings":
			{
				"buffer_size": 7600,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Upgrade NOTE: replaced 'mul(UNITY_MATRIX_MVP,*)' with 'UnityObjectToClipPos(*)'\n\nShader \"Unlit/PhonMultiLight\"\n{\n\tProperties\n\t{\n\t\t_Color (\"Color\", Color) = (1, 1, 1, 1) //The color of our object\n        _Tex (\"Pattern\", 2D) = \"white\" {} //Optional texture\n\n        _Shininess (\"Shininess\", Float) = 10 //Shininess\n        _SpecColor (\"Specular Color\", Color) = (1, 1, 1, 1) //Specular highlights color\n\t}\n\tSubShader\n\t{\n\t\tTags { \"RenderType\"=\"Opaque\" }\n\t\tLOD 100\n\n\t\tPass\n\t\t{\n\t\t\tTags { \"LightMode\" = \"ForwardBase\" } //For the first light\n\n\t\t\tCGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\" //Provides us with light data, camera information, etc\n\n            uniform float4 _LightColor0; //From UnityCG\n\n            sampler2D _Tex; //Used for texture\n            float4 _Tex_ST; //For tiling\n\n            uniform float4 _Color; //Use the above variables in here\n            uniform float4 _SpecColor;\n            uniform float _Shininess;\n\n            struct appdata\n            {\n                float4 vertex : POSITION;\n                float3 normal : NORMAL;\n                float2 uv : TEXCOORD0;\n            };\n\n            struct v2f\n            {\n                float4 pos : POSITION;\n                float3 normal : NORMAL;\n                float2 uv : TEXCOORD0;\n                float4 posWorld : TEXCOORD1;\n            };\n\n            v2f vert(appdata v)\n            {\n                v2f o;\n\n                o.posWorld = mul(unity_ObjectToWorld, v.vertex); //Calculate the world position for our point\n                o.normal = normalize(mul(float4(v.normal, 0.0), unity_WorldToObject).xyz); //Calculate the normal\n                o.pos = UnityObjectToClipPos(v.vertex); //And the position\n                o.uv = TRANSFORM_TEX(v.uv, _Tex);\n\n                return o;\n            }\n\n            fixed4 frag(v2f i) : COLOR\n            {\n                float3 normalDirection = normalize(i.normal);\n                float3 viewDirection = normalize(_WorldSpaceCameraPos - i.posWorld.xyz);\n\n                float3 vert2LightSource = _WorldSpaceLightPos0.xyz - i.posWorld.xyz;\n                float oneOverDistance = 1.0 / length(vert2LightSource);\n                float attenuation = lerp(1.0, oneOverDistance, _WorldSpaceLightPos0.w); //Optimization for spot lights. This isn't needed if you're just getting started.\n                float3 lightDirection = _WorldSpaceLightPos0.xyz - i.posWorld.xyz * _WorldSpaceLightPos0.w;\n\n                float3 ambientLighting = UNITY_LIGHTMODEL_AMBIENT.rgb * _Color.rgb; //Ambient component\n                float3 diffuseReflection = attenuation * _LightColor0.rgb * _Color.rgb * max(0.0, dot(normalDirection, lightDirection)); //Diffuse component\n                float3 specularReflection;\n                if (dot(i.normal, lightDirection) < 0.0) //Light on the wrong side - no specular\n                {\n                    specularReflection = float3(0.0, 0.0, 0.0);\n            \t  }\n                else\n                {\n                    //Specular component\n                    specularReflection = attenuation * _LightColor0.rgb * _SpecColor.rgb * pow(max(0.0, dot(reflect(-lightDirection, normalDirection), viewDirection)), _Shininess);\n                }\n\n                float3 color = (ambientLighting + diffuseReflection) * tex2D(_Tex, i.uv) + specularReflection; //Texture is not applient on specularReflection\n                return float4(color, 1.0);\n            }\n\n        \tENDCG\n\t\t}\n\t}\n}\n",
			"file": "Assets/PhonMultiLight.shader",
			"file_size": 3620,
			"file_write_time": 131655292502896236,
			"settings":
			{
				"buffer_size": 3523,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					""
				],
				[
					"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++ Starting Kit/C++ - Starting Kit.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/HTML5.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/CppClang.sublime-build",
					""
				],
				[
					"Packages/User/CppClang.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/CppClang.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 281.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"git br",
				"Git: Change Branch"
			],
			[
				"git ",
				"Git: Pull"
			],
			[
				"git bra",
				"Git: Change Branch"
			],
			[
				"git",
				"Git: Pull"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add .",
				"Git: Add..."
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git commit ",
				"Git: Commit"
			],
			[
				"git add all",
				"Git: Add All"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git p",
				"Git: Pull"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"git ch",
				"Git: Checkout Tag"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"Git  bra",
				"Git: Change Branch"
			],
			[
				"Git ",
				"Git: Pull"
			],
			[
				"Snippet: for",
				"Snippet: For Loop"
			],
			[
				"Git",
				"Git: Status"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"resource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Snippet:  str",
				"Snippet: struct"
			],
			[
				"Snippet: ",
				"Snippet: struct"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: remove pa",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Channel"
			],
			[
				"Package Control: las",
				"Package Control: List Packages"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				":w",
				":w - Save"
			],
			[
				":W",
				":w - Save"
			],
			[
				"Package Control: install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: isnta",
				"Package Control: Install Package"
			],
			[
				"Package Control: rem",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"Anaconda",
				"Anaconda: Set Python interpreter"
			],
			[
				"package Control",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"Package Control: l",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 494.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Unity/LightingEngine/Assets"
	],
	"file_history":
	[
		"/F/Unity/LightingEngine/Temp/Compiled-MarchingCubesComputeShader-.shader",
		"/F/Unity/LightingEngine/LightningEngine.sublime-project",
		"/C/Users/Danny/Documents/Unity/Projects/LightningEngine/LightningEngine.sublime-project",
		"/C/Users/Danny/Documents/Begin stap 2",
		"/C/Users/Danny/Documents/Unity/Projects/MeshTest/.gitignore",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/OmniSharpSublime.sublime-settings",
		"/C/Users/Danny/Documents/Unity/Projects/MeshTest/MeshTest.sublime-project",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/insert_game_name/main.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/.gitignore",
		"/C/Users/Danny/Documents/stap 1",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/scenes/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/source/Irrlicht/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/scenes/tiles.irr",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/Vulkan.h",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/Makefile",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/main.cpp",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/Vulkan.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/media/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/Terrain/example.irr",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/data/Terrain/example.irr.meshes/1.irrmesh",
		"/C/Users/Danny/AppData/Local/Temp/7zOC42F150E/sky.shader",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/media/irrlicht.dat",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/DocBlockr/Base File.sublime-settings",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/12.TerrainRendering/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/01.HelloWorld/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/12.TerrainRendering/main.cpp",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/insert_game_name/Makefile",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/examples/01.HelloWorld/HelloWorld.depend",
		"/C/Users/Danny/Documents/C++/ProjectGT1/irrlicht/source/Irrlicht/Irrlicht-gcc.layout",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/save/checkpoint",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/logs/checkpoint",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/logs/events.out.tfevents.1516825793.DESKTOP-GN3FM6M",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/train_base.py",
		"/C/Users/Danny/Documents/export-saved-reddit-master/export-saved-reddit-master/AccountDetails.py",
		"/C/Users/Danny/Documents/Unity/Projects/Devious2/.gitignore",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_ai_loader.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_ai.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/tensorflow_tut.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/python/client/session.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/emotion_recognition.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/base.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/tensor_ui.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/deep_net.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/mnist_converted.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/examples/tutorials/mnist/input_data.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L15,R1,C1,Fearful1,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L14,R1,C1,Fearful2,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/L13,R1,C1,Fearful3,visible,normal,255.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/FearL1.png.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/Data/train/fear/Fear.jpg.json",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/data/train/fear/_Fear.jpg.json",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/examples/tutorials/mnist/mnist.py",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/contrib/learn/python/learn/datasets/__init__.py",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/tensorflow/python/ops/math_ops.py",
		"/C/Users/Danny/Documents/INC/EmotionRecognitionTensorFlow/data.json",
		"/C/Users/Danny/AppData/Local/Programs/Python/Python35/lib/site-packages/numpy/core/numeric.py",
		"/C/Users/Danny/Documents/INC/14_pose.yml",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/NeuralNetwork.exe",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Sublimerge 3/Default (Windows).sublime-keymap",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/test.cpp",
		"/C/Users/Danny/Documents/C++/NeuralNetwork/NeuralNetwork.cpp",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/Sublimerge 3/Sublimerge 3.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
		"/C/Users/Danny/Documents/C++/sublimetextincontext.bat",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
		"/C/Program Files/Sublime Text 3/sublime_text.exe",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/GraphPanel.java",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/TrackableSkeleton.java",
		"/C/Users/Danny/Downloads/kinect-body-language-analysis-master/kinect-body-language-analysis-master/src/shahqaan/kinect/AbstractDrawable.java",
		"/C/Users/Danny/Documents/INC/computer_vision/openpose/installation.md",
		"/C/Users/Danny/Documents/INC/openpose/README.md",
		"/C/Users/Danny/Documents/Quizzer/js/jquery-3.2.1.min.js",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/shader.frag",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/shader.vert",
		"/C/Users/Danny/Documents/Vulkan/VulkanFluid/VulkanFluid/shaders/compile.bat",
		"/C/Users/Danny/Documents/Vulkan/Libraries/VulkanSDK/1.0.51.0/Templates/Visual Studio 2017/VulkanProgram/main.cpp",
		"/C/Users/Danny/AppData/Local/Temp/7zO090AD9B1/main.cpp",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/compile.bat",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/shader.frag",
		"/C/Users/Danny/Documents/Vulkan/VulkanCPP/VulkanCPP/shaders/shader.vert",
		"/C/Users/Danny/AppData/Roaming/.minecraft/launcher_profiles.json",
		"/C/Users/Danny/Documents/Quizzer/scss/.sassbuilder-config.json",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/View In Browser.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/View In Browser/View In Browser.sublime-settings",
		"/C/Users/Danny/Documents/Confocal/QT5/pyqtgraph.py",
		"/C/Users/Danny/Downloads/mmgr_dal_RCM (3).dll",
		"/C/Users/Public/Documents/National Instruments/NI-DAQ/Examples/DAQmx ANSI C/Digital/Generate Values/Write Dig Port/WriteDigPort.c",
		"/C/Users/Public/Documents/National Instruments/NI-DAQ/Examples/DAQmx ANSI C/Analog Out/Generate Voltage/Cont Gen Volt Wfm-Int Clk/ContGen-IntClk.c",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/bh_core.sublime-settings",
		"/C/Users/Danny/AppData/Local/Temp/scp44117/usr/share/wordpress/wp-content/themes/churchlink/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp44471/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp45342/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp13447/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp38618/subdomains/robin/httpdocs/wp-content/themes/ph/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp50974/subdomains/robin/httpdocs/wp-content/themes/ph/style.css",
		"/C/Users/Danny/Documents/pyqtgraph/tools/release_instructions.md",
		"/C/Users/Danny/AppData/Local/Temp/scp31661/home/drvanon/ph/page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp32180/home/drvanon/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/.hyper.js",
		"/C/Users/Danny/AppData/Local/Temp/scp39316/subdomains/robin/httpdocs/wp-content/themes/ph/sidebar-menu.php",
		"/C/Users/Danny/AppData/Local/Temp/scp21714/subdomains/robin/httpdocs/wp-content/themes/ph/functions.php",
		"/C/Users/Danny/AppData/Local/Temp/scp48543/home/drvanon/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp19620/home/drvanon/ph/functions.php",
		"/C/Users/Danny/AppData/Local/Temp/scp55420/home/drvanon/ph/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp33608/home/drvanon/ph/gulpfile.js",
		"/C/Users/Danny/Downloads/drvanon.raspberrypi.id_rsa",
		"/C/Users/Danny/AppData/Local/Temp/scp59831/home/drvanon/ph/template-parts/content-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp16661/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp13298/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp09209/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp11229/usr/share/wordpress/wp-content/themes/churchlink/searchform.php",
		"/C/Users/Danny/AppData/Local/Temp/scp10172/usr/share/wordpress/wp-content/themes/churchlink/front-page.php",
		"/C/Users/Danny/AppData/Local/Temp/scp08478/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp22026/usr/share/wordpress/wp-content/themes/churchlink/sass/theme/_child_theme.scss",
		"/C/Users/Danny/Downloads/ExpandingSearchBar/ExpandingSearchBar/index.html",
		"/C/Users/Danny/AppData/Local/Temp/scp41270/usr/share/wordpress/wp-content/themes/churchlink/header.php",
		"/C/Users/Danny/Documents/kerk/ftpsync.settings",
		"/C/Users/Danny/Documents/kerk/sftp-config.json",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/User/SFTP.sublime-settings",
		"/C/Users/Danny/AppData/Roaming/Sublime Text 3/Packages/SFTP/SFTP.sublime-settings",
		"/C/Users/Danny/AppData/Local/Temp/scp48929/var/ftp/wp-content/themes/ph/header.php",
		"/C/Users/Danny/AppData/Local/Temp/scp06005/var/ftp/wp-content/themes/ph/sass/custom/_custom.scss",
		"/C/Users/Danny/AppData/Local/Temp/scp55625/var/ftp/wp-content/themes/ph/sidebar.php"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 142.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/PhongLightning.shader",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5845,
						"regions":
						{
						},
						"selection":
						[
							[
								379,
								379
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										391,
										392
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										213,
										214
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										381,
										382
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										213,
										214
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Unity3D Shader Highlighter and Snippets/UnityShader.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/Familie Dorstijn/AppData/Local/Temp/Temp1_builtin_shaders-2017.3.1f1.zip/DefaultResourcesExtra/Standard.shader",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11946,
						"regions":
						{
						},
						"selection":
						[
							[
								7771,
								7771
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										7846,
										7847
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										7303,
										7304
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7846,
										7847
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										7303,
										7304
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Unity3D Shader Highlighter and Snippets/UnityShader.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4069.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/MCBlob.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 40997,
						"regions":
						{
						},
						"selection":
						[
							[
								14355,
								14355
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										14548,
										14549
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										13545,
										13546
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14554,
										14555
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										13545,
										13546
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 8928.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Editor/MCBlobEditor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 390,
						"regions":
						{
						},
						"selection":
						[
							[
								371,
								371
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										126,
										127
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										119,
										120
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										380,
										381
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										340,
										341
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/MarchingCubesComputeShader.compute",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7600,
						"regions":
						{
						},
						"selection":
						[
							[
								5756,
								5756
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										5770,
										5771
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5739,
										5740
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5770,
										5771
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5739,
										5740
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Unity3D Shader Highlighter and Snippets/UnityComputeShader.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4488.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/PhonMultiLight.shader",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3523,
						"regions":
						{
						},
						"selection":
						[
							[
								3281,
								3263
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 44,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3279,
										3280
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										3039,
										3040
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Unity3D Shader Highlighter and Snippets/UnityShader.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 160.0,
						"translation.y": 1181.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.clangautocomplete":
	{
		"height": 146.0
	},
	"output.exec":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 182.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 170.0
	},
	"pinned_build_system": "",
	"project": "LightningEngine.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
